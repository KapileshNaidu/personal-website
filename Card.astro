---
export interface Props {
  title: string;
  image?: string;
  imageAlt?: string;
  date?: string;
  url?: string;
  tags?: string[];
}

const { title, image, imageAlt = '', date, url, tags = [] } = Astro.props;
---

<article class="bg-white dark:bg-gray-800 rounded-lg shadow-md overflow-hidden transition-all duration-300 hover:shadow-lg h-full flex flex-col">
  {image && (
    <div class="relative h-48 overflow-hidden">
      <img 
        src={image} 
        alt={imageAlt} 
        class="w-full h-full object-cover transition-transform duration-500 hover:scale-105"
      />
    </div>
  )}
  
  <div class="p-6 flex-grow flex flex-col">
    {date && (
      <p class="text-sm text-gray-500 dark:text-gray-400 mb-2">{date}</p>
    )}
    
    <h3 class="text-xl font-semibold mb-3">
      {url ? (
        <a href={url} class="text-gray-900 dark:text-white hover:text-primary-600 dark:hover:text-primary-400">
          {title}
        </a>
      ) : (
        <span class="text-gray-900 dark:text-white">{title}</span>
      )}
    </h3>
    
    <div class="text-gray-600 dark:text-gray-300 mb-4 flex-grow">
      <slot />
    </div>
    
    {tags.length > 0 && (
      <div class="flex flex-wrap gap-2 mt-auto">
        {tags.map(tag => (
          <span class="text-xs px-2 py-1 bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 rounded-full">
            {tag}
          </span>
        ))}
      </div>
    )}
  </div>
</article>