---
const navItems = [
  { name: 'Home', href: '/' },
  { name: 'About', href: '/about' },
  { name: 'Projects', href: '/projects' },
  { name: 'Blog', href: '/blog' },
  { name: 'Motorcycling', href: '/motorcycling' },
  { name: 'Reading', href: '/reading' },
  { name: 'Contact', href: '/contact' },
];

const currentPath = Astro.url.pathname;
---

<header class="sticky top-0 z-50 backdrop-blur-md bg-white/90 dark:bg-gray-900/90 border-b border-gray-200 dark:border-gray-800 transition-colors duration-300">
  <div class="container-wide flex items-center justify-between h-16 md:h-20">
    <a href="/" class="text-xl font-bold tracking-tight group">
      <span class="bg-clip-text text-transparent bg-gradient-to-r from-primary-600 to-secondary-600 dark:from-primary-400 dark:to-secondary-400">
        John Doe
      </span>
      <span class="block text-xs text-gray-500 dark:text-gray-400 font-normal">
        Product Manager
      </span>
    </a>
    
    <!-- Mobile nav toggle -->
    <button id="mobile-nav-toggle" class="md:hidden p-2 text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-200">
      <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
      </svg>
    </button>
    
    <!-- Desktop navigation -->
    <nav class="hidden md:flex items-center space-x-1 lg:space-x-2">
      {navItems.map(item => (
        <a 
          href={item.href} 
          class={`px-3 py-2 text-sm rounded-md transition-colors ${
            currentPath === item.href || (item.href !== '/' && currentPath.startsWith(item.href)) 
              ? 'bg-gray-100 dark:bg-gray-800 text-primary-600 dark:text-primary-400 font-medium' 
              : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-800 hover:text-primary-600 dark:hover:text-primary-400'
          }`}
        >
          {item.name}
        </a>
      ))}
      
      <!-- Dark mode toggle -->
      <button id="theme-toggle" class="p-2 text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-200 rounded-md">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 hidden dark:block" viewBox="0 0 20 20" fill="currentColor">
          <path fill-rule="evenodd" d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z" clip-rule="evenodd" />
        </svg>
        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 block dark:hidden" viewBox="0 0 20 20" fill="currentColor">
          <path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z" />
        </svg>
      </button>
    </nav>
  </div>
  
  <!-- Mobile navigation -->
  <div id="mobile-nav" class="fixed inset-0 bg-white dark:bg-gray-900 z-50 flex flex-col p-4 md:hidden transform translate-x-full transition-transform duration-300">
    <div class="flex items-center justify-between mb-8">
      <a href="/" class="text-xl font-bold tracking-tight">
        <span class="bg-clip-text text-transparent bg-gradient-to-r from-primary-600 to-secondary-600 dark:from-primary-400 dark:to-secondary-400">
          John Doe
        </span>
      </a>
      <button id="mobile-nav-close" class="p-2 text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-200">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
        </svg>
      </button>
    </div>
    
    <nav class="flex flex-col space-y-4">
      {navItems.map(item => (
        <a 
          href={item.href} 
          class={`px-4 py-3 rounded-md text-lg ${
            currentPath === item.href || (item.href !== '/' && currentPath.startsWith(item.href)) 
              ? 'bg-gray-100 dark:bg-gray-800 text-primary-600 dark:text-primary-400 font-medium' 
              : 'text-gray-700 dark:text-gray-300'
          }`}
        >
          {item.name}
        </a>
      ))}
      
      <div class="flex items-center justify-between pt-4 mt-4 border-t border-gray-200 dark:border-gray-800">
        <span class="text-sm text-gray-500 dark:text-gray-400">Toggle theme</span>
        <button id="mobile-theme-toggle" class="p-2 text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-200 rounded-md">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 hidden dark:block" viewBox="0 0 20 20" fill="currentColor">
            <path fill-rule="evenodd" d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z" clip-rule="evenodd" />
          </svg>
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 block dark:hidden" viewBox="0 0 20 20" fill="currentColor">
            <path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z" />
          </svg>
        </button>
      </div>
    </nav>
  </div>
</header>

<script>
  // Mobile navigation
  document.addEventListener('DOMContentLoaded', () => {
    const mobileToggle = document.getElementById('mobile-nav-toggle');
    const mobileClose = document.getElementById('mobile-nav-close');
    const mobileNav = document.getElementById('mobile-nav');
    const mobileThemeToggle = document.getElementById('mobile-theme-toggle');
    
    if (mobileToggle && mobileClose && mobileNav) {
      mobileToggle.addEventListener('click', () => {
        mobileNav.classList.remove('translate-x-full');
        document.body.classList.add('overflow-hidden');
      });
      
      mobileClose.addEventListener('click', () => {
        mobileNav.classList.add('translate-x-full');
        document.body.classList.remove('overflow-hidden');
      });
      
      // Close mobile nav when clicking on a link
      mobileNav.querySelectorAll('a').forEach(link => {
        link.addEventListener('click', () => {
          mobileNav.classList.add('translate-x-full');
          document.body.classList.remove('overflow-hidden');
        });
      });
    }
    
    // Mobile theme toggle
    if (mobileThemeToggle) {
      mobileThemeToggle.addEventListener('click', () => {
        const isDark = document.documentElement.classList.contains('dark');
        
        if (isDark) {
          document.documentElement.classList.remove('dark');
          localStorage.setItem('theme', 'light');
        } else {
          document.documentElement.classList.add('dark');
          localStorage.setItem('theme', 'dark');
        }
      });
    }
  });
</script>